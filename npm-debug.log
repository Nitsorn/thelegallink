0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', '--save', 'firebase' ]
2 info using npm@2.5.1
3 info using node@v0.12.0
4 verbose node symlink /usr/local/bin/node
5 warn package.json react-starter@1.0.0 No repository field.
6 silly cache add args [ 'firebase', null ]
7 verbose cache add spec firebase
8 silly cache add parsed spec { raw: 'firebase',
8 silly cache add   scope: null,
8 silly cache add   name: 'firebase',
8 silly cache add   rawSpec: '',
8 silly cache add   spec: '*',
8 silly cache add   type: 'range' }
9 verbose addNamed firebase@*
10 silly addNamed semver.valid null
11 silly addNamed semver.validRange *
12 silly addNameRange { name: 'firebase', range: '*', hasData: false }
13 silly mapToRegistry name firebase
14 silly mapToRegistry using default registry
15 silly mapToRegistry registry https://registry.npmjs.org/
16 silly mapToRegistry uri https://registry.npmjs.org/firebase
17 verbose addNameRange registry:https://registry.npmjs.org/firebase not in flight; fetching
18 verbose request uri https://registry.npmjs.org/firebase
19 verbose request no auth needed
20 info attempt registry request try #1 at 15:08:20
21 verbose request id 7916d00719f5e7de
22 verbose etag "C5P5YFZRQVMZO6RQ8DKTCG4IY"
23 http request GET https://registry.npmjs.org/firebase
24 http 304 https://registry.npmjs.org/firebase
25 silly get cb [ 304,
25 silly get   { date: 'Thu, 31 Dec 2015 23:08:18 GMT',
25 silly get     via: '1.1 varnish',
25 silly get     'cache-control': 'max-age=300',
25 silly get     etag: '"C5P5YFZRQVMZO6RQ8DKTCG4IY"',
25 silly get     age: '0',
25 silly get     connection: 'keep-alive',
25 silly get     'x-served-by': 'cache-dfw1830-DFW',
25 silly get     'x-cache': 'HIT',
25 silly get     'x-cache-hits': '1',
25 silly get     'x-timer': 'S1451603298.916132,VS0,VE93',
25 silly get     vary: 'Accept' } ]
26 verbose etag https://registry.npmjs.org/firebase from cache
27 verbose get saving firebase to /Users/hyeunjoon/.npm/registry.npmjs.org/firebase/.cache.json
28 silly addNameRange number 2 { name: 'firebase', range: '*', hasData: true }
29 silly addNameRange versions [ 'firebase',
29 silly addNameRange   [ '0.0.0',
29 silly addNameRange     '0.5.0',
29 silly addNameRange     '0.5.1',
29 silly addNameRange     '0.5.2',
29 silly addNameRange     '0.5.3',
29 silly addNameRange     '0.5.4',
29 silly addNameRange     '0.6.0',
29 silly addNameRange     '0.6.1',
29 silly addNameRange     '0.6.2',
29 silly addNameRange     '0.6.3',
29 silly addNameRange     '0.6.4',
29 silly addNameRange     '0.6.5',
29 silly addNameRange     '0.6.6',
29 silly addNameRange     '0.6.7',
29 silly addNameRange     '0.6.8',
29 silly addNameRange     '0.6.9',
29 silly addNameRange     '0.6.10',
29 silly addNameRange     '0.6.11',
29 silly addNameRange     '0.6.14',
29 silly addNameRange     '0.6.15',
29 silly addNameRange     '0.6.16',
29 silly addNameRange     '0.6.17',
29 silly addNameRange     '0.6.19',
29 silly addNameRange     '0.6.21',
29 silly addNameRange     '0.6.22',
29 silly addNameRange     '1.0.1',
29 silly addNameRange     '1.0.1-npm',
29 silly addNameRange     '1.0.2',
29 silly addNameRange     '1.0.3',
29 silly addNameRange     '1.0.4',
29 silly addNameRange     '1.0.5',
29 silly addNameRange     '1.0.10',
29 silly addNameRange     '1.0.10-2',
29 silly addNameRange     '1.0.11',
29 silly addNameRange     '1.0.12',
29 silly addNameRange     '1.0.13',
29 silly addNameRange     '1.0.14',
29 silly addNameRange     '1.0.15',
29 silly addNameRange     '1.0.15-2',
29 silly addNameRange     '1.0.15-3',
29 silly addNameRange     '1.0.17',
29 silly addNameRange     '1.0.18',
29 silly addNameRange     '1.0.19',
29 silly addNameRange     '1.0.20',
29 silly addNameRange     '1.0.21',
29 silly addNameRange     '1.0.23',
29 silly addNameRange     '1.0.24',
29 silly addNameRange     '1.1.0',
29 silly addNameRange     '1.1.1',
29 silly addNameRange     '1.1.2',
29 silly addNameRange     '1.2.0-beta.1-0',
29 silly addNameRange     '1.2.0-beta.2',
29 silly addNameRange     '1.1.3',
29 silly addNameRange     '1.2.0-beta.3',
29 silly addNameRange     '2.0.0',
29 silly addNameRange     '2.0.1',
29 silly addNameRange     '2.0.2',
29 silly addNameRange     '2.0.3',
29 silly addNameRange     '2.0.4',
29 silly addNameRange     '2.0.5',
29 silly addNameRange     '2.0.6',
29 silly addNameRange     '2.1.0',
29 silly addNameRange     '2.1.1',
29 silly addNameRange     '2.1.2',
29 silly addNameRange     '1.2.0',
29 silly addNameRange     '2.2.0',
29 silly addNameRange     '2.2.1',
29 silly addNameRange     '2.2.2',
29 silly addNameRange     '2.2.3',
29 silly addNameRange     '2.2.4',
29 silly addNameRange     '2.2.5',
29 silly addNameRange     '2.2.6',
29 silly addNameRange     '2.2.7',
29 silly addNameRange     '2.2.8',
29 silly addNameRange     '2.2.9',
29 silly addNameRange     '2.3.0',
29 silly addNameRange     '2.3.1',
29 silly addNameRange     '2.3.2' ] ]
30 verbose addNamed firebase@2.3.2
31 silly addNamed semver.valid 2.3.2
32 silly addNamed semver.validRange 2.3.2
33 silly cache afterAdd firebase@2.3.2
34 verbose afterAdd /Users/hyeunjoon/.npm/firebase/2.3.2/package/package.json not in flight; writing
35 verbose afterAdd /Users/hyeunjoon/.npm/firebase/2.3.2/package/package.json written
36 silly install resolved [ { author: { name: 'Firebase' },
36 silly install resolved     email: 'operations@firebase.com',
36 silly install resolved     name: 'firebase',
36 silly install resolved     description: 'Firebase library for Node.js',
36 silly install resolved     version: '2.3.2',
36 silly install resolved     main: './lib/firebase-node.js',
36 silly install resolved     browser: './lib/firebase-web.js',
36 silly install resolved     scripts: { test: 'echo "Error: no test specified" && exit 1' },
36 silly install resolved     keywords: [ 'Firebase', 'synchronization', 'real-time', 'websocket' ],
36 silly install resolved     dependencies: { 'faye-websocket': '>=0.6.0' },
36 silly install resolved     repository: { type: 'none', url: 'https://www.firebase.com/' },
36 silly install resolved     _id: 'firebase@2.3.2',
36 silly install resolved     _shasum: '648e3631429f2635fd814e55a53f3a5cf335b270',
36 silly install resolved     _from: 'firebase@*',
36 silly install resolved     _npmVersion: '2.7.5',
36 silly install resolved     _nodeVersion: '0.10.38',
36 silly install resolved     _npmUser: { name: 'firebase', email: 'operations@firebase.com' },
36 silly install resolved     maintainers: [ [Object] ],
36 silly install resolved     dist:
36 silly install resolved      { shasum: '648e3631429f2635fd814e55a53f3a5cf335b270',
36 silly install resolved        tarball: 'http://registry.npmjs.org/firebase/-/firebase-2.3.2.tgz' },
36 silly install resolved     directories: {},
36 silly install resolved     _resolved: 'https://registry.npmjs.org/firebase/-/firebase-2.3.2.tgz',
36 silly install resolved     readme: 'ERROR: No README data found!' } ]
37 info install firebase@2.3.2 into /Users/hyeunjoon/contracts/thelegallink
38 info installOne firebase@2.3.2
39 verbose installOne of firebase to /Users/hyeunjoon/contracts/thelegallink not in flight; installing
40 verbose lock using /Users/hyeunjoon/.npm/_locks/firebase-cf036ab0d09408aa.lock for /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase
41 silly install write writing firebase 2.3.2 to /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase
42 silly cache addNamed cb firebase@2.3.2
43 verbose unbuild node_modules/firebase
44 verbose gentlyRm vacuuming /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase
45 verbose tar unpack /Users/hyeunjoon/.npm/firebase/2.3.2/package.tgz
46 verbose tar unpacking to /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase
47 verbose gentlyRm vacuuming /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase
48 silly gunzTarPerm modes [ '755', '644' ]
49 silly gunzTarPerm extractEntry package.json
50 silly gunzTarPerm modified mode [ 'package.json', 436, 420 ]
51 silly gunzTarPerm extractEntry README.md
52 silly gunzTarPerm modified mode [ 'README.md', 436, 420 ]
53 silly gunzTarPerm extractEntry lib/README
54 silly gunzTarPerm modified mode [ 'lib/README', 436, 420 ]
55 silly gunzTarPerm extractEntry lib/firebase-node.js
56 silly gunzTarPerm modified mode [ 'lib/firebase-node.js', 436, 420 ]
57 silly gunzTarPerm extractEntry lib/firebase-web.js
58 silly gunzTarPerm modified mode [ 'lib/firebase-web.js', 436, 420 ]
59 silly gunzTarPerm extractEntry npm-shrinkwrap.json
60 silly gunzTarPerm modified mode [ 'npm-shrinkwrap.json', 436, 420 ]
61 info preinstall firebase@2.3.2
62 verbose readDependencies npm-shrinkwrap.json is overriding dependencies
63 info shrinkwrap file "/Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/npm-shrinkwrap.json"
64 verbose readDependencies returned deps { 'faye-websocket': 'https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz' }
65 silly prepareForInstallMany adding faye-websocket@https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz from firebase dependencies
66 verbose readDependencies: using existing wrap [ '/Users/hyeunjoon/contracts/thelegallink/node_modules/firebase',
66 verbose readDependencies: using existing wrap   { 'faye-websocket':
66 verbose readDependencies: using existing wrap      { version: '0.9.3',
66 verbose readDependencies: using existing wrap        from: 'faye-websocket@>=0.6.0',
66 verbose readDependencies: using existing wrap        resolved: 'https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz',
66 verbose readDependencies: using existing wrap        dependencies: [Object] } } ]
67 verbose from wrap [ 'faye-websocket',
67 verbose from wrap   { version: '0.9.3',
67 verbose from wrap     from: 'faye-websocket@>=0.6.0',
67 verbose from wrap     resolved: 'https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz',
67 verbose from wrap     dependencies: { 'websocket-driver': [Object] } } ]
68 verbose readDependencies returned deps { 'faye-websocket': 'https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz' }
69 silly cache add args [ 'faye-websocket@https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz',
69 silly cache add   null ]
70 verbose cache add spec faye-websocket@https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz
71 silly cache add parsed spec { raw: 'faye-websocket@https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz',
71 silly cache add   scope: null,
71 silly cache add   name: 'faye-websocket',
71 silly cache add   rawSpec: 'https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz',
71 silly cache add   spec: 'https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz',
71 silly cache add   type: 'remote' }
72 silly mapToRegistry name faye-websocket@https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz
73 silly mapToRegistry using default registry
74 silly mapToRegistry registry https://registry.npmjs.org/
75 silly mapToRegistry uri https://registry.npmjs.org/faye-websocket@https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz
76 verbose addRemoteTarball https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz not in flight; adding
77 verbose addRemoteTarball [ 'https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz',
77 verbose addRemoteTarball   null ]
78 info retry fetch attempt 1 at 15:08:21
79 info attempt registry request try #1 at 15:08:21
80 http fetch GET https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz
81 http fetch 200 https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz
82 silly fetchAndShaCheck shasum 482a505b0df0ae626b969866d3bd740cdb962e83
83 verbose addTmpTarball /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz not in flight; adding
84 verbose addTmpTarball validating metadata from /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz
85 verbose tar unpack /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz
86 verbose tar unpacking to /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/unpack-2af245310ad6
87 verbose gentlyRm vacuuming /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/unpack-2af245310ad6
88 silly gunzTarPerm modes [ '755', '644' ]
89 silly gunzTarPerm extractEntry package.json
90 silly gunzTarPerm extractEntry README.md
91 silly gunzTarPerm extractEntry CHANGELOG.md
92 silly gunzTarPerm extractEntry examples/autobahn_client.js
93 silly gunzTarPerm extractEntry examples/client.js
94 silly gunzTarPerm extractEntry examples/proxy_server.js
95 silly gunzTarPerm extractEntry examples/server.js
96 silly gunzTarPerm extractEntry examples/haproxy.conf
97 silly gunzTarPerm extractEntry examples/sse.html
98 silly gunzTarPerm extractEntry examples/ws.html
99 silly gunzTarPerm extractEntry lib/faye/eventsource.js
100 silly gunzTarPerm extractEntry lib/faye/websocket.js
101 silly gunzTarPerm extractEntry lib/faye/websocket/api.js
102 silly gunzTarPerm extractEntry lib/faye/websocket/client.js
103 silly gunzTarPerm extractEntry lib/faye/websocket/api/event.js
104 silly gunzTarPerm extractEntry lib/faye/websocket/api/event_target.js
105 silly cache afterAdd faye-websocket@0.9.3
106 verbose afterAdd /Users/hyeunjoon/.npm/faye-websocket/0.9.3/package/package.json not in flight; writing
107 verbose afterAdd /Users/hyeunjoon/.npm/faye-websocket/0.9.3/package/package.json written
108 silly install resolved [ { name: 'faye-websocket',
108 silly install resolved     description: 'Standards-compliant WebSocket server and client',
108 silly install resolved     homepage: 'http://github.com/faye/faye-websocket-node',
108 silly install resolved     author:
108 silly install resolved      { name: 'James Coglan',
108 silly install resolved        email: 'jcoglan@gmail.com',
108 silly install resolved        url: 'http://jcoglan.com/' },
108 silly install resolved     keywords: [ 'websocket', 'eventsource' ],
108 silly install resolved     license: 'MIT',
108 silly install resolved     version: '0.9.3',
108 silly install resolved     engines: { node: '>=0.4.0' },
108 silly install resolved     main: './lib/faye/websocket',
108 silly install resolved     dependencies: { 'websocket-driver': '>=0.5.1' },
108 silly install resolved     devDependencies: { jstest: '', pace: '', 'permessage-deflate': '' },
108 silly install resolved     scripts: { test: 'jstest spec/runner.js' },
108 silly install resolved     repository:
108 silly install resolved      { type: 'git',
108 silly install resolved        url: 'git://github.com/faye/faye-websocket-node.git' },
108 silly install resolved     bugs: { url: 'http://github.com/faye/faye-websocket-node/issues' },
108 silly install resolved     readme: '# faye-websocket\n\n* Travis CI build: [![Build\n  status](https://secure.travis-ci.org/faye/faye-websocket-node.svg)](http://travis-ci.org/faye/faye-websocket-node)\n* Autobahn tests: [server](http://faye.jcoglan.com/autobahn/servers/),\n  [client](http://faye.jcoglan.com/autobahn/clients/)\n\nThis is a general-purpose WebSocket implementation extracted from the\n[Faye](http://faye.jcoglan.com) project. It provides classes for easily building\nWebSocket servers and clients in Node. It does not provide a server itself, but\nrather makes it easy to handle WebSocket connections within an existing\n[Node](http://nodejs.org/) application. It does not provide any abstraction\nother than the standard [WebSocket API](http://dev.w3.org/html5/websockets/).\n\nIt also provides an abstraction for handling\n[EventSource](http://dev.w3.org/html5/eventsource/) connections, which are\none-way connections that allow the server to push data to the client. They are\nbased on streaming HTTP responses and can be easier to access via proxies than\nWebSockets.\n\n\n## Installation\n\n```\n$ npm install faye-websocket\n```\n\n\n## Handling WebSocket connections in Node\n\nYou can handle WebSockets on the server side by listening for HTTP Upgrade\nrequests, and creating a new socket for the request. This socket object exposes\nthe usual WebSocket methods for receiving and sending messages. For example this\nis how you\'d implement an echo server:\n\n```js\nvar WebSocket = require(\'faye-websocket\'),\n    http      = require(\'http\');\n\nvar server = http.createServer();\n\nserver.on(\'upgrade\', function(request, socket, body) {\n  if (WebSocket.isWebSocket(request)) {\n    var ws = new WebSocket(request, socket, body);\n    \n    ws.on(\'message\', function(event) {\n      ws.send(event.data);\n    });\n    \n    ws.on(\'close\', function(event) {\n      console.log(\'close\', event.code, event.reason);\n      ws = null;\n    });\n  }\n});\n\nserver.listen(8000);\n```\n\n`WebSocket` objects are also duplex streams, so you could replace the\n`ws.on(\'message\', ...)` line with:\n\n```js\n    ws.pipe(ws);\n```\n\nNote that under certain circumstances (notably a draft-76 client connecting\nthrough an HTTP proxy), the WebSocket handshake will not be complete after you\ncall `new WebSocket()` because the server will not have received the entire\nhandshake from the client yet. In this case, calls to `ws.send()` will buffer\nthe message in memory until the handshake is complete, at which point any\nbuffered messages will be sent to the client.\n\nIf you need to detect when the WebSocket handshake is complete, you can use the\n`onopen` event.\n\nIf the connection\'s protocol version supports it, you can call `ws.ping()` to\nsend a ping message and wait for the client\'s response. This method takes a\nmessage string, and an optional callback that fires when a matching pong message\nis received. It returns `true` iff a ping message was sent. If the client does\nnot support ping/pong, this method sends no data and returns `false`.\n\n```js\nws.ping(\'Mic check, one, two\', function() {\n  // fires when pong is received\n});\n```\n\n\n## Using the WebSocket client\n\nThe client supports both the plain-text `ws` protocol and the encrypted `wss`\nprotocol, and has exactly the same interface as a socket you would use in a web\nbrowser. On the wire it identifies itself as `hybi-13`.\n\n```js\nvar WebSocket = require(\'faye-websocket\'),\n    ws        = new WebSocket.Client(\'ws://www.example.com/\');\n\nws.on(\'open\', function(event) {\n  console.log(\'open\');\n  ws.send(\'Hello, world!\');\n});\n\nws.on(\'message\', function(event) {\n  console.log(\'message\', event.data);\n});\n\nws.on(\'close\', function(event) {\n  console.log(\'close\', event.code, event.reason);\n  ws = null;\n});\n```\n\nThe WebSocket client also lets you inspect the status and headers of the\nhandshake response via its `statusCode` and `headers` properties.\n\nTo connect via a proxy, set the `proxy` option to the HTTP origin of the proxy,\nincluding any authorization information, custom headers and TLS config you\nrequire. Only the `origin` setting is required.\n\n```js\nvar ws = new WebSocket.Client(\'ws://www.example.com/\', null, {\n  proxy: {\n    origin:  \'http://username:password@proxy.example.com\',\n    headers: {\'User-Agent\': \'node\'},\n    tls:     {cert: fs.readFileSync(\'client.crt\')}\n  }\n});\n```\n\nThe `tls` value is a Node \'TLS options\' object that will be passed to\n[`tls.connect()`](http://nodejs.org/api/tls.html#tls_tls_connect_options_callback).\n\n\n## Subprotocol negotiation\n\nThe WebSocket protocol allows peers to select and identify the application\nprotocol to use over the connection. On the client side, you can set which\nprotocols the client accepts by passing a list of protocol names when you\nconstruct the socket:\n\n```js\nvar ws = new WebSocket.Client(\'ws://www.example.com/\', [\'irc\', \'amqp\']);\n```\n\nOn the server side, you can likewise pass in the list of protocols the server\nsupports after the other constructor arguments:\n\n```js\nvar ws = new WebSocket(request, socket, body, [\'irc\', \'amqp\']);\n```\n\nIf the client and server agree on a protocol, both the client- and server-side\nsocket objects expose the selected protocol through the `ws.protocol` property.\n\n\n## Protocol extensions\n\nfaye-websocket is based on the\n[websocket-extensions](https://github.com/faye/websocket-extensions-node)\nframework that allows extensions to be negotiated via the\n`Sec-WebSocket-Extensions` header. To add extensions to a connection, pass an\narray of extensions to the `:extensions` option. For example, to add\n[permessage-deflate](https://github.com/faye/permessage-deflate-node):\n\n```js\nvar deflate = require(\'permessage-deflate\');\n\nvar ws = new WebSocket(request, socket, body, null, {extensions: [deflate]});\n```\n\n\n## Initialization options\n\nBoth the server- and client-side classes allow an options object to be passed in\nat initialization time, for example:\n\n```js\nvar ws = new WebSocket(request, socket, body, protocols, options);\nvar ws = new WebSocket.Client(url, protocols, options);\n```\n\n`protocols` is an array of subprotocols as described above, or `null`.\n`options` is an optional object containing any of these fields:\n\n* `extensions` - an array of\n  [websocket-extensions](https://github.com/faye/websocket-extensions-node)\n  compatible extensions, as described above\n* `headers` - an object containing key-value pairs representing HTTP headers to\n  be sent during the handshake process\n* `maxLength` - the maximum allowed size of incoming message frames, in bytes.\n  The default value is `2^26 - 1`, or 1 byte short of 64 MiB.\n* `ping` - an integer that sets how often the WebSocket should send ping frames,\n  measured in seconds\n\nThe client accepts some additional options:\n\n* `proxy` - settings for a proxy as described above\n* `tls` - a Node \'TLS options\' object containing TLS settings for the origin\n  server, this will be passed to\n  [`tls.connect()`](http://nodejs.org/api/tls.html#tls_tls_connect_options_callback)\n* `ca` - (legacy) a shorthand for passing `{tls: {ca: value}}`\n\n\n## WebSocket API\n\nBoth server- and client-side `WebSocket` objects support the following API.\n\n* <b>`on(\'open\', function(event) {})`</b> fires when the socket connection is\n  established. Event has no attributes.\n* <b>`on(\'message\', function(event) {})`</b> fires when the socket receives a\n  message. Event has one attribute, <b>`data`</b>, which is either a `String`\n  (for text frames) or a `Buffer` (for binary frames).\n* <b>`on(\'error\', function(event) {})`</b> fires when there is a protocol error\n  due to bad data sent by the other peer. This event is purely informational,\n  you do not need to implement error recover.\n* <b>`on(\'close\', function(event) {})`</b> fires when either the client or the\n  server closes the connection. Event has two optional attributes, <b>`code`</b>\n  and <b>`reason`</b>, that expose the status code and message sent by the peer\n  that closed the connection.\n* <b>`send(message)`</b> accepts either a `String` or a `Buffer` and sends a\n  text or binary message over the connection to the other peer.\n* <b>`ping(message = \'\', function() {})`</b> sends a ping frame with an optional\n  message and fires the callback when a matching pong is received.\n* <b>`close(code, reason)`</b> closes the connection, sending the given status\n  code and reason text, both of which are optional.\n* <b>`version`</b> is a string containing the version of the `WebSocket`\n  protocol the connection is using.\n* <b>`protocol`</b> is a string (which may be empty) identifying the subprotocol\n  the socket is using.\n\n\n## Handling EventSource connections in Node\n\nEventSource connections provide a very similar interface, although because they\nonly allow the server to send data to the client, there is no `onmessage` API.\nEventSource allows the server to push text messages to the client, where each\nmessage has an optional event-type and ID.\n\n```js\nvar WebSocket   = require(\'faye-websocket\'),\n    EventSource = WebSocket.EventSource,\n    http        = require(\'http\');\n\nvar server = http.createServer();\n\nserver.on(\'request\', function(request, response) {\n  if (EventSource.isEventSource(request)) {\n    var es = new EventSource(request, response);\n    console.log(\'open\', es.url, es.lastEventId);\n    \n    // Periodically send messages\n    var loop = setInterval(function() { es.send(\'Hello\') }, 1000);\n    \n    es.on(\'close\', function() {\n      clearInterval(loop);\n      es = null;\n    });\n  \n  } else {\n    // Normal HTTP request\n    response.writeHead(200, {\'Content-Type\': \'text/plain\'});\n    response.end(\'Hello\');\n  }\n});\n\nserver.listen(8000);\n```\n\nThe `send` method takes two optional parameters, `event` and `id`. The default\nevent-type is `\'message\'` with no ID. For example, to send a `notification`\nevent with ID `99`:\n\n```js\nes.send(\'Breaking News!\', {event: \'notification\', id: \'99\'});\n```\n\nThe `EventSource` object exposes the following properties:\n\n* <b>`url`</b> is a string containing the URL the client used to create the\n  EventSource.\n* <b>`lastEventId`</b> is a string containing the last event ID received by the\n  client. You can use this when the client reconnects after a dropped connection\n  to determine which messages need resending.\n\nWhen you initialize an EventSource with ` new EventSource()`, you can pass\nconfiguration options after the `response` parameter. Available options are:\n\n* <b>`headers`</b> is an object containing custom headers to be set on the\n  EventSource response.\n* <b>`retry`</b> is a number that tells the client how long (in seconds) it\n  should wait after a dropped connection before attempting to reconnect.\n* <b>`ping`</b> is a number that tells the server how often (in seconds) to send\n  \'ping\' packets to the client to keep the connection open, to defeat timeouts\n  set by proxies. The client will ignore these messages.\n\nFor example, this creates a connection that allows access from any origin, pings\nevery 15 seconds and is retryable every 10 seconds if the connection is broken:\n\n```js\nvar es = new EventSource(request, response, {\n  headers: {\'Access-Control-Allow-Origin\': \'*\'},\n  ping:    15,\n  retry:   10\n});\n```\n\nYou can send a ping message at any time by calling `es.ping()`. Unlike\nWebSocket, the client does not send a response to this; it is merely to send\nsome data over the wire to keep the connection alive.\n\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2010-2015 James Coglan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \'Software\'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
108 silly install resolved     readmeFilename: 'README.md',
108 silly install resolved     _id: 'faye-websocket@0.9.3',
108 silly install resolved     _shasum: '482a505b0df0ae626b969866d3bd740cdb962e83',
108 silly install resolved     _resolved: 'https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz',
108 silly install resolved     _from: 'https://registry.npmjs.org/faye-websocket/-/faye-websocket-0.9.3.tgz' } ]
109 info install faye-websocket@0.9.3 into /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase
110 info installOne faye-websocket@0.9.3
111 verbose installOne of faye-websocket to /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase not in flight; installing
112 verbose lock using /Users/hyeunjoon/.npm/_locks/faye-websocket-1f76eaa0017fc1d4.lock for /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket
113 silly install write writing faye-websocket 0.9.3 to /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket
114 silly cache addNamed cb faye-websocket@0.9.3
115 verbose unbuild node_modules/firebase/node_modules/faye-websocket
116 verbose gentlyRm vacuuming /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket
117 verbose tar unpack /Users/hyeunjoon/.npm/faye-websocket/0.9.3/package.tgz
118 verbose tar unpacking to /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket
119 verbose gentlyRm vacuuming /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket
120 silly gunzTarPerm modes [ '755', '644' ]
121 silly gunzTarPerm extractEntry package.json
122 silly gunzTarPerm extractEntry README.md
123 silly gunzTarPerm extractEntry CHANGELOG.md
124 silly gunzTarPerm extractEntry examples/autobahn_client.js
125 silly gunzTarPerm extractEntry examples/client.js
126 silly gunzTarPerm extractEntry examples/proxy_server.js
127 silly gunzTarPerm extractEntry examples/server.js
128 silly gunzTarPerm extractEntry examples/haproxy.conf
129 silly gunzTarPerm extractEntry examples/sse.html
130 silly gunzTarPerm extractEntry examples/ws.html
131 silly gunzTarPerm extractEntry lib/faye/eventsource.js
132 silly gunzTarPerm extractEntry lib/faye/websocket.js
133 silly gunzTarPerm extractEntry lib/faye/websocket/api.js
134 silly gunzTarPerm extractEntry lib/faye/websocket/client.js
135 silly gunzTarPerm extractEntry lib/faye/websocket/api/event.js
136 silly gunzTarPerm extractEntry lib/faye/websocket/api/event_target.js
137 info preinstall faye-websocket@0.9.3
138 verbose readDependencies: using existing wrap [ '/Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket',
138 verbose readDependencies: using existing wrap   { 'websocket-driver':
138 verbose readDependencies: using existing wrap      { version: '0.5.2',
138 verbose readDependencies: using existing wrap        from: 'websocket-driver@>=0.5.1',
138 verbose readDependencies: using existing wrap        resolved: 'https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz',
138 verbose readDependencies: using existing wrap        dependencies: [Object] } } ]
139 verbose from wrap [ 'websocket-driver',
139 verbose from wrap   { version: '0.5.2',
139 verbose from wrap     from: 'websocket-driver@>=0.5.1',
139 verbose from wrap     resolved: 'https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz',
139 verbose from wrap     dependencies: { 'websocket-extensions': [Object] } } ]
140 verbose readDependencies returned deps { 'websocket-driver': 'https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz' }
141 silly prepareForInstallMany adding websocket-driver@https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz from faye-websocket dependencies
142 verbose readDependencies: using existing wrap [ '/Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket',
142 verbose readDependencies: using existing wrap   { 'websocket-driver':
142 verbose readDependencies: using existing wrap      { version: '0.5.2',
142 verbose readDependencies: using existing wrap        from: 'websocket-driver@>=0.5.1',
142 verbose readDependencies: using existing wrap        resolved: 'https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz',
142 verbose readDependencies: using existing wrap        dependencies: [Object] } } ]
143 verbose from wrap [ 'websocket-driver',
143 verbose from wrap   { version: '0.5.2',
143 verbose from wrap     from: 'websocket-driver@>=0.5.1',
143 verbose from wrap     resolved: 'https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz',
143 verbose from wrap     dependencies: { 'websocket-extensions': [Object] } } ]
144 verbose readDependencies returned deps { 'websocket-driver': 'https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz' }
145 silly cache add args [ 'websocket-driver@https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz',
145 silly cache add   null ]
146 verbose cache add spec websocket-driver@https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz
147 silly cache add parsed spec { raw: 'websocket-driver@https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz',
147 silly cache add   scope: null,
147 silly cache add   name: 'websocket-driver',
147 silly cache add   rawSpec: 'https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz',
147 silly cache add   spec: 'https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz',
147 silly cache add   type: 'remote' }
148 silly mapToRegistry name websocket-driver@https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz
149 silly mapToRegistry using default registry
150 silly mapToRegistry registry https://registry.npmjs.org/
151 silly mapToRegistry uri https://registry.npmjs.org/websocket-driver@https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz
152 verbose addRemoteTarball https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz not in flight; adding
153 verbose addRemoteTarball [ 'https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz',
153 verbose addRemoteTarball   null ]
154 info retry fetch attempt 1 at 15:08:21
155 info attempt registry request try #1 at 15:08:21
156 http fetch GET https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz
157 http fetch 200 https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz
158 silly fetchAndShaCheck shasum 8c7c85da0713b4060556b4d71c01775ee1269eb9
159 verbose addTmpTarball /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz not in flight; adding
160 verbose addTmpTarball validating metadata from /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz
161 verbose tar unpack /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz
162 verbose tar unpacking to /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/unpack-91fd2fd07502
163 verbose gentlyRm vacuuming /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/unpack-91fd2fd07502
164 silly gunzTarPerm modes [ '755', '644' ]
165 silly gunzTarPerm extractEntry package.json
166 silly gunzTarPerm extractEntry README.md
167 silly gunzTarPerm extractEntry CHANGELOG.md
168 silly gunzTarPerm extractEntry examples/tcp_server.js
169 silly gunzTarPerm extractEntry lib/websocket/driver.js
170 silly gunzTarPerm extractEntry lib/websocket/http_parser.js
171 silly gunzTarPerm extractEntry lib/websocket/streams.js
172 silly gunzTarPerm extractEntry lib/websocket/driver/base.js
173 silly gunzTarPerm extractEntry lib/websocket/driver/client.js
174 silly gunzTarPerm extractEntry lib/websocket/driver/draft75.js
175 silly gunzTarPerm extractEntry lib/websocket/driver/draft76.js
176 silly gunzTarPerm extractEntry lib/websocket/driver/headers.js
177 silly gunzTarPerm extractEntry lib/websocket/driver/hybi.js
178 silly gunzTarPerm extractEntry lib/websocket/driver/proxy.js
179 silly gunzTarPerm extractEntry lib/websocket/driver/server.js
180 silly gunzTarPerm extractEntry lib/websocket/driver/hybi/frame.js
181 silly gunzTarPerm extractEntry lib/websocket/driver/hybi/message.js
182 silly gunzTarPerm extractEntry lib/websocket/driver/hybi/stream_reader.js
183 silly cache afterAdd websocket-driver@0.5.2
184 verbose afterAdd /Users/hyeunjoon/.npm/websocket-driver/0.5.2/package/package.json not in flight; writing
185 verbose afterAdd /Users/hyeunjoon/.npm/websocket-driver/0.5.2/package/package.json written
186 silly install resolved [ { name: 'websocket-driver',
186 silly install resolved     description: 'WebSocket protocol handler with pluggable I/O',
186 silly install resolved     homepage: 'http://github.com/faye/websocket-driver-node',
186 silly install resolved     author:
186 silly install resolved      { name: 'James Coglan',
186 silly install resolved        email: 'jcoglan@gmail.com',
186 silly install resolved        url: 'http://jcoglan.com/' },
186 silly install resolved     keywords: [ 'websocket' ],
186 silly install resolved     license: 'MIT',
186 silly install resolved     version: '0.5.2',
186 silly install resolved     engines: { node: '>=0.6.0' },
186 silly install resolved     main: './lib/websocket/driver',
186 silly install resolved     dependencies: { 'websocket-extensions': '>=0.1.1' },
186 silly install resolved     devDependencies: { jstest: '', 'permessage-deflate': '' },
186 silly install resolved     scripts: { test: 'jstest spec/runner.js' },
186 silly install resolved     repository:
186 silly install resolved      { type: 'git',
186 silly install resolved        url: 'git://github.com/faye/websocket-driver-node.git' },
186 silly install resolved     bugs: { url: 'http://github.com/faye/websocket-driver-node/issues' },
186 silly install resolved     readme: '# websocket-driver [![Build Status](https://travis-ci.org/faye/websocket-driver-node.svg)](https://travis-ci.org/faye/websocket-driver-node)\n\nThis module provides a complete implementation of the WebSocket protocols that\ncan be hooked up to any I/O stream. It aims to simplify things by decoupling the\nprotocol details from the I/O layer, such that users only need to implement code\nto stream data in and out of it without needing to know anything about how the\nprotocol actually works. Think of it as a complete WebSocket system with\npluggable I/O.\n\nDue to this design, you get a lot of things for free. In particular, if you hook\nthis module up to some I/O object, it will do all of this for you:\n\n* Select the correct server-side driver to talk to the client\n* Generate and send both server- and client-side handshakes\n* Recognize when the handshake phase completes and the WS protocol begins\n* Negotiate subprotocol selection based on `Sec-WebSocket-Protocol`\n* Negotiate and use extensions via the\n  [websocket-extensions](https://github.com/faye/websocket-extensions-node)\n  module\n* Buffer sent messages until the handshake process is finished\n* Deal with proxies that defer delivery of the draft-76 handshake body\n* Notify you when the socket is open and closed and when messages arrive\n* Recombine fragmented messages\n* Dispatch text, binary, ping and close frames\n* Manage the socket-closing handshake process\n* Automatically reply to ping frames with a matching pong\n* Apply masking to messages sent by the client\n\nThis library was originally extracted from the [Faye](http://faye.jcoglan.com)\nproject but now aims to provide simple WebSocket support for any Node-based\nproject.\n\n\n## Installation\n\n```\n$ npm install websocket-driver\n```\n\n\n## Usage\n\nThis module provides protocol drivers that have the same interface on the server\nand on the client. A WebSocket driver is an object with two duplex streams\nattached; one for incoming/outgoing messages and one for managing the wire\nprotocol over an I/O stream. The full API is described below.\n\n\n### Server-side with HTTP\n\nA Node webserver emits a special event for \'upgrade\' requests, and this is where\nyou should handle WebSockets. You first check whether the request is a\nWebSocket, and if so you can create a driver and attach the request\'s I/O stream\nto it.\n\n```js\nvar http = require(\'http\'),\n    websocket = require(\'websocket-driver\');\n\nvar server = http.createServer();\n\nserver.on(\'upgrade\', function(request, socket, body) {\n  if (!websocket.isWebSocket(request)) return;\n\n  var driver = websocket.http(request);\n\n  driver.io.write(body);\n  socket.pipe(driver.io).pipe(socket);\n\n  driver.messages.on(\'data\', function(message) {\n    console.log(\'Got a message\', message);\n  });\n\n  driver.start();\n});\n```\n\nNote the line `driver.io.write(body)` - you must pass the `body` buffer to the\nsocket driver in order to make certain versions of the protocol work.\n\n\n### Server-side with TCP\n\nYou can also handle WebSocket connections in a bare TCP server, if you\'re not\nusing an HTTP server and don\'t want to implement HTTP parsing yourself.\n\nThe driver will emit a `connect` event when a request is received, and at this\npoint you can detect whether it\'s a WebSocket and handle it as such. Here\'s an\nexample using the Node `net` module:\n\n```js\nvar net = require(\'net\'),\n    websocket = require(\'websocket-driver\');\n\nvar server = net.createServer(function(connection) {\n  var driver = websocket.server();\n\n  driver.on(\'connect\', function() {\n    if (websocket.isWebSocket(driver)) {\n      driver.start();\n    } else {\n      // handle other HTTP requests\n    }\n  });\n\n  driver.on(\'close\', function() { connection.end() });\n  connection.on(\'error\', function() {});\n\n  connection.pipe(driver.io).pipe(connection);\n\n  driver.messages.pipe(driver.messages);\n});\n\nserver.listen(4180);\n```\n\nIn the `connect` event, the driver gains several properties to describe the\nrequest, similar to a Node request object, such as `method`, `url` and\n`headers`. However you should remember it\'s not a real request object; you\ncannot write data to it, it only tells you what request data we parsed from the\ninput.\n\nIf the request has a body, it will be in the `driver.body` buffer, but only as\nmuch of the body as has been piped into the driver when the `connect` event\nfires.\n\n\n### Client-side\n\nSimilarly, to implement a WebSocket client you just need to make a driver by\npassing in a URL. After this you use the driver API as described below to\nprocess incoming data and send outgoing data.\n\n\n```js\nvar net = require(\'net\'),\n    websocket = require(\'websocket-driver\');\n\nvar driver = websocket.client(\'ws://www.example.com/socket\'),\n    tcp = net.connect(80, \'www.example.com\');\n\ntcp.pipe(driver.io).pipe(tcp);\n\ntcp.on(\'connect\', function() {\n  driver.start();\n});\n\ndriver.messages.on(\'data\', function(message) {\n  console.log(\'Got a message\', message);\n});\n```\n\nClient drivers have two additional properties for reading the HTTP data that was\nsent back by the server:\n\n* `driver.statusCode` - the integer value of the HTTP status code\n* `driver.headers` - an object containing the response headers\n\n\n### HTTP Proxies\n\nThe client driver supports connections via HTTP proxies using the `CONNECT`\nmethod. Instead of sending the WebSocket handshake immediately, it will send a\n`CONNECT` request, wait for a `200` response, and then proceed as normal.\n\nTo use this feature, call `driver.proxy(url)` where `url` is the origin of the\nproxy, including a username and password if required. This produces a duplex\nstream that you should pipe in and out of your TCP connection to the proxy\nserver. When the proxy emits `connect`, you can then pipe `driver.io` to your\nTCP stream and call `driver.start()`.\n\n```js\nvar net = require(\'net\'),\n    websocket = require(\'websocket-driver\');\n\nvar driver = websocket.client(\'ws://www.example.com/socket\'),\n    proxy  = driver.proxy(\'http://username:password@proxy.example.com\'),\n    tcp    = net.connect(80, \'proxy.example.com\');\n\ntcp.pipe(proxy).pipe(tcp, {end: false});\n\ntcp.on(\'connect\', function() {\n  proxy.start();\n});\n\nproxy.on(\'connect\', function() {\n  driver.io.pipe(tcp).pipe(driver.io);\n  driver.start();\n});\n\ndriver.messages.on(\'data\', function(message) {\n  console.log(\'Got a message\', message);\n});\n```\n\nThe proxy\'s `connect` event is also where you should perform a TLS handshake on\nyour TCP stream, if you are connecting to a `wss:` endpoint.\n\nIn the event that proxy connection fails, `proxy` will emit an `error`. You can\ninspect the proxy\'s response via `proxy.statusCode` and `proxy.headers`.\n\n```js\nproxy.on(\'error\', function(error) {\n  console.error(error.message);\n  console.log(proxy.statusCode);\n  console.log(proxy.headers);\n});\n```\n\nBefore calling `proxy.start()` you can set custom headers using\n`proxy.setHeader()`:\n\n```js\nproxy.setHeader(\'User-Agent\', \'node\');\nproxy.start();\n```\n\n\n### Driver API\n\nDrivers are created using one of the following methods:\n\n```js\ndriver = websocket.http(request, options)\ndriver = websocket.server(options)\ndriver = websocket.client(url, options)\n```\n\nThe `http` method returns a driver chosen using the headers from a Node HTTP\nrequest object. The `server` method returns a driver that will parse an HTTP\nrequest and then decide which driver to use for it using the `http` method. The\n`client` method always returns a driver for the RFC version of the protocol with\nmasking enabled on outgoing frames.\n\nThe `options` argument is optional, and is an object. It may contain the\nfollowing fields:\n\n* `maxLength` - the maximum allowed size of incoming message frames, in bytes.\n  The default value is `2^26 - 1`, or 1 byte short of 64 MiB.\n* `protocols` - an array of strings representing acceptable subprotocols for use\n  over the socket. The driver will negotiate one of these to use via the\n  `Sec-WebSocket-Protocol` header if supported by the other peer.\n\nA driver has two duplex streams attached to it:\n\n* <b>`driver.io`</b> - this stream should be attached to an I/O socket like a\n  TCP stream. Pipe incoming TCP chunks to this stream for them to be parsed, and\n  pipe this stream back into TCP to send outgoing frames.\n* <b>`driver.messages`</b> - this stream emits messages received over the\n  WebSocket.  Writing to it sends messages to the other peer by emitting frames\n  via the `driver.io` stream.\n\nAll drivers respond to the following API methods, but some of them are no-ops\ndepending on whether the client supports the behaviour.\n\nNote that most of these methods are commands: if they produce data that should\nbe sent over the socket, they will give this to you by emitting `data` events on\nthe `driver.io` stream.\n\n#### `driver.on(\'open\', function(event) {})`\n\nSets the callback to execute when the socket becomes open.\n\n#### `driver.on(\'message\', function(event) {})`\n\nSets the callback to execute when a message is received. `event` will have a\n`data` attribute containing either a string in the case of a text message or a\n`Buffer` in the case of a binary message.\n\nYou can also listen for messages using the `driver.messages.on(\'data\')` event,\nwhich emits strings for text messages and buffers for binary messages.\n\n#### `driver.on(\'error\', function(event) {})`\n\nSets the callback to execute when a protocol error occurs due to the other peer\nsending an invalid byte sequence. `event` will have a `message` attribute\ndescribing the error.\n\n#### `driver.on(\'close\', function(event) {})`\n\nSets the callback to execute when the socket becomes closed. The `event` object\nhas `code` and `reason` attributes.\n\n#### `driver.addExtension(extension)`\n\nRegisters a protocol extension whose operation will be negotiated via the\n`Sec-WebSocket-Extensions` header. `extension` is any extension compatible with\nthe [websocket-extensions](https://github.com/faye/websocket-extensions-node)\nframework.\n\n#### `driver.setHeader(name, value)`\n\nSets a custom header to be sent as part of the handshake response, either from\nthe server or from the client. Must be called before `start()`, since this is\nwhen the headers are serialized and sent.\n\n#### `driver.start()`\n\nInitiates the protocol by sending the handshake - either the response for a\nserver-side driver or the request for a client-side one. This should be the\nfirst method you invoke.  Returns `true` iff a handshake was sent.\n\n#### `driver.parse(string)`\n\nTakes a string and parses it, potentially resulting in message events being\nemitted (see `on(\'message\')` above) or in data being sent to `driver.io`.  You\nshould send all data you receive via I/O to this method by piping a stream into\n`driver.io`.\n\n#### `driver.text(string)`\n\nSends a text message over the socket. If the socket handshake is not yet\ncomplete, the message will be queued until it is. Returns `true` if the message\nwas sent or queued, and `false` if the socket can no longer send messages.\n\nThis method is equivalent to `driver.messages.write(string)`.\n\n#### `driver.binary(buffer)`\n\nTakes a `Buffer` and sends it as a binary message. Will queue and return `true`\nor `false` the same way as the `text` method. It will also return `false` if the\ndriver does not support binary messages.\n\nThis method is equivalent to `driver.messages.write(buffer)`.\n\n#### `driver.ping(string = \'\', function() {})`\n\nSends a ping frame over the socket, queueing it if necessary. `string` and the\ncallback are both optional. If a callback is given, it will be invoked when the\nsocket receives a pong frame whose content matches `string`. Returns `false` if\nframes can no longer be sent, or if the driver does not support ping/pong.\n\n#### `driver.close()`\n\nInitiates the closing handshake if the socket is still open. For drivers with no\nclosing handshake, this will result in the immediate execution of the\n`on(\'close\')` driver. For drivers with a closing handshake, this sends a closing\nframe and `emit(\'close\')` will execute when a response is received or a protocol\nerror occurs.\n\n#### `driver.version`\n\nReturns the WebSocket version in use as a string. Will either be `hixie-75`,\n`hixie-76` or `hybi-$version`.\n\n#### `driver.protocol`\n\nReturns a string containing the selected subprotocol, if any was agreed upon\nusing the `Sec-WebSocket-Protocol` mechanism. This value becomes available after\n`emit(\'open\')` has fired.\n\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2010-2015 James Coglan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \'Software\'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
186 silly install resolved     readmeFilename: 'README.md',
186 silly install resolved     _id: 'websocket-driver@0.5.2',
186 silly install resolved     _shasum: '8c7c85da0713b4060556b4d71c01775ee1269eb9',
186 silly install resolved     _resolved: 'https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz',
186 silly install resolved     _from: 'https://registry.npmjs.org/websocket-driver/-/websocket-driver-0.5.2.tgz' } ]
187 info install websocket-driver@0.5.2 into /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket
188 info installOne websocket-driver@0.5.2
189 verbose installOne of websocket-driver to /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket not in flight; installing
190 verbose lock using /Users/hyeunjoon/.npm/_locks/websocket-driver-3250d6adf227b93c.lock for /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
191 silly install write writing websocket-driver 0.5.2 to /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
192 silly cache addNamed cb websocket-driver@0.5.2
193 verbose unbuild node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
194 verbose gentlyRm vacuuming /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
195 verbose tar unpack /Users/hyeunjoon/.npm/websocket-driver/0.5.2/package.tgz
196 verbose tar unpacking to /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
197 verbose gentlyRm vacuuming /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
198 silly gunzTarPerm modes [ '755', '644' ]
199 silly gunzTarPerm extractEntry package.json
200 silly gunzTarPerm extractEntry README.md
201 silly gunzTarPerm extractEntry CHANGELOG.md
202 silly gunzTarPerm extractEntry examples/tcp_server.js
203 silly gunzTarPerm extractEntry lib/websocket/driver.js
204 silly gunzTarPerm extractEntry lib/websocket/http_parser.js
205 silly gunzTarPerm extractEntry lib/websocket/streams.js
206 silly gunzTarPerm extractEntry lib/websocket/driver/base.js
207 silly gunzTarPerm extractEntry lib/websocket/driver/client.js
208 silly gunzTarPerm extractEntry lib/websocket/driver/draft75.js
209 silly gunzTarPerm extractEntry lib/websocket/driver/draft76.js
210 silly gunzTarPerm extractEntry lib/websocket/driver/headers.js
211 silly gunzTarPerm extractEntry lib/websocket/driver/hybi.js
212 silly gunzTarPerm extractEntry lib/websocket/driver/proxy.js
213 silly gunzTarPerm extractEntry lib/websocket/driver/server.js
214 silly gunzTarPerm extractEntry lib/websocket/driver/hybi/frame.js
215 silly gunzTarPerm extractEntry lib/websocket/driver/hybi/message.js
216 silly gunzTarPerm extractEntry lib/websocket/driver/hybi/stream_reader.js
217 info preinstall websocket-driver@0.5.2
218 verbose readDependencies: using existing wrap [ '/Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver',
218 verbose readDependencies: using existing wrap   { 'websocket-extensions':
218 verbose readDependencies: using existing wrap      { version: '0.1.1',
218 verbose readDependencies: using existing wrap        from: 'websocket-extensions@>=0.1.1',
218 verbose readDependencies: using existing wrap        resolved: 'https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz' } } ]
219 verbose from wrap [ 'websocket-extensions',
219 verbose from wrap   { version: '0.1.1',
219 verbose from wrap     from: 'websocket-extensions@>=0.1.1',
219 verbose from wrap     resolved: 'https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz' } ]
220 verbose readDependencies returned deps { 'websocket-extensions': 'https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz' }
221 silly prepareForInstallMany adding websocket-extensions@https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz from websocket-driver dependencies
222 verbose readDependencies: using existing wrap [ '/Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver',
222 verbose readDependencies: using existing wrap   { 'websocket-extensions':
222 verbose readDependencies: using existing wrap      { version: '0.1.1',
222 verbose readDependencies: using existing wrap        from: 'websocket-extensions@>=0.1.1',
222 verbose readDependencies: using existing wrap        resolved: 'https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz' } } ]
223 verbose from wrap [ 'websocket-extensions',
223 verbose from wrap   { version: '0.1.1',
223 verbose from wrap     from: 'websocket-extensions@>=0.1.1',
223 verbose from wrap     resolved: 'https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz' } ]
224 verbose readDependencies returned deps { 'websocket-extensions': 'https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz' }
225 silly cache add args [ 'websocket-extensions@https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz',
225 silly cache add   null ]
226 verbose cache add spec websocket-extensions@https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz
227 silly cache add parsed spec { raw: 'websocket-extensions@https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz',
227 silly cache add   scope: null,
227 silly cache add   name: 'websocket-extensions',
227 silly cache add   rawSpec: 'https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz',
227 silly cache add   spec: 'https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz',
227 silly cache add   type: 'remote' }
228 silly mapToRegistry name websocket-extensions@https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz
229 silly mapToRegistry using default registry
230 silly mapToRegistry registry https://registry.npmjs.org/
231 silly mapToRegistry uri https://registry.npmjs.org/websocket-extensions@https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz
232 verbose addRemoteTarball https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz not in flight; adding
233 verbose addRemoteTarball [ 'https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz',
233 verbose addRemoteTarball   null ]
234 info retry fetch attempt 1 at 15:08:22
235 info attempt registry request try #1 at 15:08:22
236 http fetch GET https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz
237 http fetch 200 https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz
238 silly fetchAndShaCheck shasum 76899499c184b6ef754377c2dbb0cd6cb55d29e7
239 verbose addTmpTarball /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz not in flight; adding
240 verbose addTmpTarball validating metadata from /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz
241 verbose tar unpack /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz
242 verbose tar unpacking to /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/unpack-1923ed3b5d93
243 verbose gentlyRm vacuuming /var/folders/l_/w08vsngj071_8qzw14z07ppm0000gn/T/npm-44559-f74df2d6/unpack-1923ed3b5d93
244 silly gunzTarPerm modes [ '755', '644' ]
245 silly gunzTarPerm extractEntry package.json
246 silly gunzTarPerm extractEntry README.md
247 silly gunzTarPerm extractEntry CHANGELOG.md
248 silly gunzTarPerm extractEntry lib/parser.js
249 silly gunzTarPerm extractEntry lib/websocket_extensions.js
250 silly gunzTarPerm extractEntry lib/pipeline/README.md
251 silly gunzTarPerm extractEntry lib/pipeline/cell.js
252 silly gunzTarPerm extractEntry lib/pipeline/functor.js
253 silly gunzTarPerm extractEntry lib/pipeline/index.js
254 silly gunzTarPerm extractEntry lib/pipeline/pledge.js
255 silly gunzTarPerm extractEntry lib/pipeline/ring_buffer.js
256 silly cache afterAdd websocket-extensions@0.1.1
257 verbose afterAdd /Users/hyeunjoon/.npm/websocket-extensions/0.1.1/package/package.json not in flight; writing
258 verbose afterAdd /Users/hyeunjoon/.npm/websocket-extensions/0.1.1/package/package.json written
259 silly install resolved [ { name: 'websocket-extensions',
259 silly install resolved     description: 'Generic extension manager for WebSocket connections',
259 silly install resolved     homepage: 'http://github.com/faye/websocket-extensions-node',
259 silly install resolved     author:
259 silly install resolved      { name: 'James Coglan',
259 silly install resolved        email: 'jcoglan@gmail.com',
259 silly install resolved        url: 'http://jcoglan.com/' },
259 silly install resolved     keywords: [ 'websocket' ],
259 silly install resolved     license: 'MIT',
259 silly install resolved     version: '0.1.1',
259 silly install resolved     engines: { node: '>=0.6.0' },
259 silly install resolved     main: './lib/websocket_extensions',
259 silly install resolved     devDependencies: { jstest: '' },
259 silly install resolved     scripts: { test: 'jstest spec/runner.js' },
259 silly install resolved     repository:
259 silly install resolved      { type: 'git',
259 silly install resolved        url: 'git://github.com/faye/websocket-extensions-node.git' },
259 silly install resolved     bugs: { url: 'http://github.com/faye/websocket-extensions-node/issues' },
259 silly install resolved     readme: '# websocket-extensions [![Build status](https://secure.travis-ci.org/faye/websocket-extensions-node.svg)](http://travis-ci.org/faye/websocket-extensions-node)\n\nA minimal framework that supports the implementation of WebSocket extensions in\na way that\'s decoupled from the main protocol. This library aims to allow a\nWebSocket extension to be written and used with any protocol library, by\ndefining abstract representations of frames and messages that allow modules to\nco-operate.\n\n`websocket-extensions` provides a container for registering extension plugins,\nand provides all the functions required to negotiate which extensions to use\nduring a session via the `Sec-WebSocket-Extensions` header. By implementing the\nAPIs defined in this document, an extension may be used by any WebSocket library\nbased on this framework.\n\n## Installation\n\n```\n$ npm install websocket-extensions\n```\n\n## Usage\n\nThere are two main audiences for this library: authors implementing the\nWebSocket protocol, and authors implementing extensions. End users of a\nWebSocket library or an extension should be able to use any extension by passing\nit as an argument to their chosen protocol library, without needing to know how\neither of them work, or how the `websocket-extensions` framework operates.\n\nThe library is designed with the aim that any protocol implementation and any\nextension can be used together, so long as they support the same abstract\nrepresentation of frames and messages.\n\n### Data types\n\nThe APIs provided by the framework rely on two data types; extensions will\nexpect to be given data and to be able to return data in these formats:\n\n#### *Frame*\n\n*Frame* is a structure representing a single WebSocket frame of any type. Frames\nare simple objects that must have at least the following properties, which\nrepresent the data encoded in the frame:\n\n| property     | description                                                        |\n| ------------ | ------------------------------------------------------------------ |\n| `final`      | `true` if the `FIN` bit is set, `false` otherwise                  |\n| `rsv1`       | `true` if the `RSV1` bit is set, `false` otherwise                 |\n| `rsv2`       | `true` if the `RSV2` bit is set, `false` otherwise                 |\n| `rsv3`       | `true` if the `RSV3` bit is set, `false` otherwise                 |\n| `opcode`     | the numeric opcode (`0`, `1`, `2`, `8`, `9`, or `10`) of the frame |\n| `masked`     | `true` if the `MASK` bit is set, `false` otherwise                 |\n| `maskingKey` | a 4-byte `Buffer` if `masked` is `true`, otherwise `null`          |\n| `payload`    | a `Buffer` containing the (unmasked) application data              |\n\n#### *Message*\n\nA *Message* represents a complete application message, which can be formed from\ntext, binary and continuation frames. It has the following properties:\n\n| property | description                                                       |\n| -------- | ----------------------------------------------------------------- |\n| `rsv1`   | `true` if the first frame of the message has the `RSV1` bit set   |\n| `rsv2`   | `true` if the first frame of the message has the `RSV2` bit set   |\n| `rsv3`   | `true` if the first frame of the message has the `RSV3` bit set   |\n| `opcode` | the numeric opcode (`1` or `2`) of the first frame of the message |\n| `data`   | the concatenation of all the frame payloads in the message        |\n\n### For driver authors\n\nA driver author is someone implementing the WebSocket protocol proper, and who\nwishes end users to be able to use WebSocket extensions with their library.\n\nAt the start of a WebSocket session, on both the client and the server side,\nthey should begin by creating an extension container and adding whichever\nextensions they want to use.\n\n```js\nvar Extensions = require(\'websocket-extensions\'),\n    deflate    = require(\'permessage-deflate\');\n\nvar exts = new Extensions();\nexts.add(deflate);\n```\n\nIn the following examples, `exts` refers to this `Extensions` instance.\n\n#### Client sessions\n\nClients will use the methods `generateOffer()` and `activate(header)`.\n\nAs part of the handshake process, the client must send a\n`Sec-WebSocket-Extensions` header to advertise that it supports the registered\nextensions. This header should be generated using:\n\n```js\nrequest.headers[\'sec-websocket-extensions\'] = exts.generateOffer();\n```\n\nThis returns a string, for example `"permessage-deflate;\nclient_max_window_bits"`, that represents all the extensions the client is\noffering to use, and their parameters. This string may contain multiple offers\nfor the same extension.\n\nWhen the client receives the handshake response from the server, it should pass\nthe incoming `Sec-WebSocket-Extensions` header in to `exts` to activate the\nextensions the server has accepted:\n\n```js\nexts.activate(response.headers[\'sec-websocket-extensions\']);\n```\n\nIf the server has sent any extension responses that the client does not\nrecognize, or are in conflict with one another for use of RSV bits, or that use\ninvalid parameters for the named extensions, then `exts.activate()` will\n`throw`. In this event, the client driver should fail the connection with\nclosing code `1010`.\n\n#### Server sessions\n\nServers will use the method `generateResponse(header)`.\n\nA server session needs to generate a `Sec-WebSocket-Extensions` header to send\nin its handshake response:\n\n```js\nvar clientOffer = request.headers[\'sec-websocket-extensions\'],\n    extResponse = exts.generateResponse(clientOffer);\n\nresponse.headers[\'sec-websocket-extensions\'] = extResponse;\n```\n\nCalling `exts.generateResponse(header)` activates those extensions the client\nhas asked to use, if they are registered, asks each extension for a set of\nresponse parameters, and returns a string containing the response parameters for\nall accepted extensions.\n\n#### In both directions\n\nBoth clients and servers will use the methods `validFrameRsv(frame)`,\n`processIncomingMessage(message)` and `processOutgoingMessage(message)`.\n\nThe WebSocket protocol requires that frames do not have any of the `RSV` bits\nset unless there is an extension in use that allows otherwise. When processing\nan incoming frame, sessions should pass a *Frame* object to:\n\n```js\nexts.validFrameRsv(frame)\n```\n\nIf this method returns `false`, the session should fail the WebSocket connection\nwith closing code `1002`.\n\nTo pass incoming messages through the extension stack, a session should\nconstruct a *Message* object according to the above datatype definitions, and\ncall:\n\n```js\nexts.processIncomingMessage(message, function(error, msg) {\n  // hand the message off to the application\n});\n```\n\nIf any extensions fail to process the message, then the callback will yield an\nerror and the session should fail the WebSocket connection with closing code\n`1010`. If `error` is `null`, then `msg` should be passed on to the application.\n\nTo pass outgoing messages through the extension stack, a session should\nconstruct a *Message* as before, and call:\n\n```js\nexts.processOutgoingMessage(message, function(error, msg) {\n  // write message to the transport\n});\n```\n\nIf any extensions fail to process the message, then the callback will yield an\nerror and the session should fail the WebSocket connection with closing code\n`1010`. If `error` is `null`, then `message` should be converted into frames\n(with the message\'s `rsv1`, `rsv2`, `rsv3` and `opcode` set on the first frame)\nand written to the transport.\n\nAt the end of the WebSocket session (either when the protocol is explicitly\nended or the transport connection disconnects), the driver should call:\n\n```js\nexts.close(function() {})\n```\n\nThe callback is invoked when all extensions have finished processing any\nmessages in the pipeline and it\'s safe to close the socket.\n\n### For extension authors\n\nAn extension author is someone implementing an extension that transforms\nWebSocket messages passing between the client and server. They would like to\nimplement their extension once and have it work with any protocol library.\n\nExtension authors will not install `websocket-extensions` or call it directly.\nInstead, they should implement the following API to allow their extension to\nplug into the `websocket-extensions` framework.\n\nAn `Extension` is any object that has the following properties:\n\n| property | description                                                                  |\n| -------- | ---------------------------------------------------------------------------- |\n| `name`   | a string containing the name of the extension as used in negotiation headers |\n| `type`   | a string, must be `"permessage"`                                             |\n| `rsv1`   | either `true` if the extension uses the RSV1 bit, `false` otherwise          |\n| `rsv2`   | either `true` if the extension uses the RSV2 bit, `false` otherwise          |\n| `rsv3`   | either `true` if the extension uses the RSV3 bit, `false` otherwise          |\n\nIt must also implement the following methods:\n\n```js\next.createClientSession()\n```\n\nThis returns a *ClientSession*, whose interface is defined below.\n\n```js\next.createServerSession(offers)\n```\n\nThis takes an array of offer params and returns a *ServerSession*, whose\ninterface is defined below. For example, if the client handshake contains the\noffer header:\n\n```\nSec-WebSocket-Extensions: permessage-deflate; server_no_context_takeover; server_max_window_bits=8, \\\n                          permessage-deflate; server_max_window_bits=15\n```\n\nthen the `permessage-deflate` extension will receive the call:\n\n```js\next.createServerSession([\n  {server_no_context_takeover: true, server_max_window_bits: 8},\n  {server_max_window_bits: 15}\n]);\n```\n\nThe extension must decide which set of parameters it wants to accept, if any,\nand return a *ServerSession* if it wants to accept the parameters and `null`\notherwise.\n\n#### *ClientSession*\n\nA *ClientSession* is the type returned by `ext.createClientSession()`. It must\nimplement the following methods, as well as the *Session* API listed below.\n\n```js\nclientSession.generateOffer()\n// e.g.  -> [\n//            {server_no_context_takeover: true, server_max_window_bits: 8},\n//            {server_max_window_bits: 15}\n//          ]\n```\n\nThis must return a set of parameters to include in the client\'s\n`Sec-WebSocket-Extensions` offer header. If the session wants to offer multiple\nconfigurations, it can return an array of sets of parameters as shown above.\n\n```js\nclientSession.activate(params) // -> true\n```\n\nThis must take a single set of parameters from the server\'s handshake response\nand use them to configure the client session. If the client accepts the given\nparameters, then this method must return `true`. If it returns any other value,\nthe framework will interpret this as the client rejecting the response, and will\n`throw`.\n\n#### *ServerSession*\n\nA *ServerSession* is the type returned by `ext.createServerSession(offers)`. It\nmust implement the following methods, as well as the *Session* API listed below.\n\n```js\nserverSession.generateResponse()\n// e.g.  -> {server_max_window_bits: 8}\n```\n\nThis returns the set of parameters the server session wants to send in its\n`Sec-WebSocket-Extensions` response header. Only one set of parameters is\nreturned to the client per extension. Server sessions that would confict on\ntheir use of RSV bits are not activated.\n\n#### *Session*\n\nThe *Session* API must be implemented by both client and server sessions. It\ncontains two methods, `processIncomingMessage(message)` and\n`processOutgoingMessage(message)`.\n\n```js\nsession.processIncomingMessage(message, function(error, msg) { ... })\n```\n\nThe session must implement this method to take an incoming *Message* as defined\nabove, transform it in any way it needs, then return it via the callback. If\nthere is an error processing the message, this method should yield an error as\nthe first argument.\n\n```js\nsession.processOutgoingMessage(message, function(error, msg) { ... })\n```\n\nThe session must implement this method to take an outgoing *Message* as defined\nabove, transform it in any way it needs, then return it via the callback. If\nthere is an error processing the message, this method should yield an error as\nthe first argument.\n\nNote that both `processIncomingMessage()` and `processOutgoingMessage()` can\nperform their logic asynchronously, are allowed to process multiple messages\nconcurrently, and are not required to complete working on messages in the same\norder the messages arrive. `websocket-extensions` will reorder messages as your\nextension emits them and will make sure every extension is given messages in the\norder they arrive from the driver. This allows extensions to maintain state that\ndepends on the messages\' wire order, for example keeping a DEFLATE compression\ncontext between messages.\n\n```js\nsession.close()\n```\n\nThe framework will call this method when the WebSocket session ends, allowing\nthe session to release any resources it\'s using.\n\n## Examples\n\n* Consumer: [websocket-driver](https://github.com/faye/websocket-driver-node)\n* Provider: [permessage-deflate](https://github.com/faye/permessage-deflate-node)\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014-2015 James Coglan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \'Software\'), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
259 silly install resolved     readmeFilename: 'README.md',
259 silly install resolved     _id: 'websocket-extensions@0.1.1',
259 silly install resolved     _shasum: '76899499c184b6ef754377c2dbb0cd6cb55d29e7',
259 silly install resolved     _resolved: 'https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz',
259 silly install resolved     _from: 'https://registry.npmjs.org/websocket-extensions/-/websocket-extensions-0.1.1.tgz' } ]
260 info install websocket-extensions@0.1.1 into /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
261 info installOne websocket-extensions@0.1.1
262 verbose installOne of websocket-extensions to /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver not in flight; installing
263 verbose lock using /Users/hyeunjoon/.npm/_locks/websocket-extensions-49b6d1f09748eb43.lock for /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver/node_modules/websocket-extensions
264 silly install write writing websocket-extensions 0.1.1 to /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver/node_modules/websocket-extensions
265 silly cache addNamed cb websocket-extensions@0.1.1
266 verbose unbuild node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver/node_modules/websocket-extensions
267 verbose gentlyRm vacuuming /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver/node_modules/websocket-extensions
268 verbose tar unpack /Users/hyeunjoon/.npm/websocket-extensions/0.1.1/package.tgz
269 verbose tar unpacking to /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver/node_modules/websocket-extensions
270 verbose gentlyRm vacuuming /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver/node_modules/websocket-extensions
271 silly gunzTarPerm modes [ '755', '644' ]
272 silly gunzTarPerm extractEntry package.json
273 silly gunzTarPerm extractEntry README.md
274 silly gunzTarPerm extractEntry CHANGELOG.md
275 silly gunzTarPerm extractEntry lib/parser.js
276 silly gunzTarPerm extractEntry lib/websocket_extensions.js
277 silly gunzTarPerm extractEntry lib/pipeline/README.md
278 silly gunzTarPerm extractEntry lib/pipeline/cell.js
279 silly gunzTarPerm extractEntry lib/pipeline/functor.js
280 silly gunzTarPerm extractEntry lib/pipeline/index.js
281 silly gunzTarPerm extractEntry lib/pipeline/pledge.js
282 silly gunzTarPerm extractEntry lib/pipeline/ring_buffer.js
283 info preinstall websocket-extensions@0.1.1
284 silly install resolved []
285 verbose about to build /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver/node_modules/websocket-extensions
286 info build /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver/node_modules/websocket-extensions
287 verbose linkStuff [ false,
287 verbose linkStuff   false,
287 verbose linkStuff   false,
287 verbose linkStuff   '/Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver/node_modules' ]
288 info linkStuff websocket-extensions@0.1.1
289 verbose linkBins websocket-extensions@0.1.1
290 verbose linkMans websocket-extensions@0.1.1
291 verbose rebuildBundles websocket-extensions@0.1.1
292 info install websocket-extensions@0.1.1
293 info postinstall websocket-extensions@0.1.1
294 verbose unlock done using /Users/hyeunjoon/.npm/_locks/websocket-extensions-49b6d1f09748eb43.lock for /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver/node_modules/websocket-extensions
295 verbose about to build /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
296 info build /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
297 verbose linkStuff [ false,
297 verbose linkStuff   false,
297 verbose linkStuff   false,
297 verbose linkStuff   '/Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules' ]
298 info linkStuff websocket-driver@0.5.2
299 verbose linkBins websocket-driver@0.5.2
300 verbose linkMans websocket-driver@0.5.2
301 verbose rebuildBundles websocket-driver@0.5.2
302 verbose rebuildBundles [ 'websocket-extensions' ]
303 info install websocket-driver@0.5.2
304 info postinstall websocket-driver@0.5.2
305 verbose unlock done using /Users/hyeunjoon/.npm/_locks/websocket-driver-3250d6adf227b93c.lock for /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket/node_modules/websocket-driver
306 verbose about to build /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket
307 info build /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket
308 verbose linkStuff [ false,
308 verbose linkStuff   false,
308 verbose linkStuff   false,
308 verbose linkStuff   '/Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules' ]
309 info linkStuff faye-websocket@0.9.3
310 verbose linkBins faye-websocket@0.9.3
311 verbose linkMans faye-websocket@0.9.3
312 verbose rebuildBundles faye-websocket@0.9.3
313 verbose rebuildBundles [ 'websocket-driver' ]
314 info install faye-websocket@0.9.3
315 info postinstall faye-websocket@0.9.3
316 verbose unlock done using /Users/hyeunjoon/.npm/_locks/faye-websocket-1f76eaa0017fc1d4.lock for /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase/node_modules/faye-websocket
317 verbose about to build /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase
318 info build /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase
319 verbose linkStuff [ false,
319 verbose linkStuff   false,
319 verbose linkStuff   false,
319 verbose linkStuff   '/Users/hyeunjoon/contracts/thelegallink/node_modules' ]
320 info linkStuff firebase@2.3.2
321 verbose linkBins firebase@2.3.2
322 verbose linkMans firebase@2.3.2
323 verbose rebuildBundles firebase@2.3.2
324 verbose rebuildBundles [ 'faye-websocket' ]
325 info install firebase@2.3.2
326 info postinstall firebase@2.3.2
327 verbose unlock done using /Users/hyeunjoon/.npm/_locks/firebase-cf036ab0d09408aa.lock for /Users/hyeunjoon/contracts/thelegallink/node_modules/firebase
328 verbose stack Error: The package react does not satisfy its siblings' peerDependencies requirements!
328 verbose stack     at /usr/local/lib/node_modules/npm/lib/install.js:103:32
328 verbose stack     at /usr/local/lib/node_modules/npm/lib/install.js:225:5
328 verbose stack     at /usr/local/lib/node_modules/npm/node_modules/read-installed/read-installed.js:138:5
328 verbose stack     at /usr/local/lib/node_modules/npm/node_modules/read-installed/read-installed.js:251:14
328 verbose stack     at cb (/usr/local/lib/node_modules/npm/node_modules/slide/lib/async-map.js:47:24)
328 verbose stack     at /usr/local/lib/node_modules/npm/node_modules/read-installed/read-installed.js:251:14
328 verbose stack     at cb (/usr/local/lib/node_modules/npm/node_modules/slide/lib/async-map.js:47:24)
328 verbose stack     at /usr/local/lib/node_modules/npm/node_modules/read-installed/read-installed.js:251:14
328 verbose stack     at cb (/usr/local/lib/node_modules/npm/node_modules/slide/lib/async-map.js:47:24)
328 verbose stack     at /usr/local/lib/node_modules/npm/node_modules/read-installed/read-installed.js:251:14
329 verbose cwd /Users/hyeunjoon/contracts/thelegallink
330 error Darwin 15.0.0
331 error argv "node" "/usr/local/bin/npm" "install" "--save" "firebase"
332 error node v0.12.0
333 error npm  v2.5.1
334 error code EPEERINVALID
335 error peerinvalid The package react does not satisfy its siblings' peerDependencies requirements!
335 error peerinvalid Peer react-dropdown@0.7.2 wants react@^0.14.0
335 error peerinvalid Peer react-router@1.0.0-beta2 wants react@0.13.x
335 error peerinvalid Peer react-dom@0.14.3 wants react@^0.14.3
335 error peerinvalid Peer react-scroll@0.35.0 wants react@>=0.13.0
336 verbose exit [ 1, true ]
